<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ndky.paper.kpimgrapp.Mappers.AuthMapper">
    <select id="existsUser" resultType="Boolean">
        select (case when count(id) = 1 then true else false end) as result
        from authorization
        where username = #{username}
          and password = #{password};
    </select>

    <resultMap id="authUser" type="ndky.paper.kpimgrapp.Models.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <!--使用ofType来指定连接的表中的个体类型，比如这里使用了set<Role>，所以ofType要写Role-->
        <collection property="roles" column="id" ofType="ndky.paper.kpimgrapp.Models.Role" select="selectRoleForUser"/>
    </resultMap>

    <select id="selectRoleForUser" resultType="ndky.paper.kpimgrapp.Models.Role">
        select a.id, b.name
        from user_roles a,
             role b
        where a.role_id = b.id
          and a.authorization_id = #{id};
    </select>

    <select id="selectUserByUserName" resultMap="authUser">
        select *
        from authorization
        where username = #{username};
    </select>

    <select id="selectRoleDetailByUsername" resultMap="roleDetail">
        select c.id, c.name
        from authorization a,
             user_roles b,
             role c
        where a.id = b.authorization_id
          and b.role_id = c.id
          and a.username = #{username};
    </select>

    <resultMap id="roleDetail" type="ndky.paper.kpimgrapp.Models.Role">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <collection property="role_scope" column="id" ofType="ndky.paper.kpimgrapp.Models.RoleScope"
                    select="selectRoleScopeForRole"/>
    </resultMap>

    <select id="selectRoleScopeForRole" resultType="ndky.paper.kpimgrapp.Models.RoleScope">
        select b.operation_id, b.object_id
        from role a,
             role_scope b
        where a.id = b.role_id
          and a.id = #{id};
    </select>

    <select id="selectRoleScopeByUsername" resultType="ndky.paper.kpimgrapp.Models.RoleScope">
        select d.operation_id, d.object_id
        from authorization a,
             user_roles b,
             role c,
             role_scope d
        where a.id = b.authorization_id
          and b.role_id = c.id
          and c.id = d.role_id
          and a.username = #{username}
    </select>
</mapper>